{"aggregate::count":{"name":"aggregate::count","description":"Run a task, command, or script on targets and aggregate the results as\na count of targets for each value of a key.","parameters":{"command":{"type":"Optional[String[0]]","sensitive":false,"default_value":"undef","description":"The command to run. Mutually exclusive with script and task."},"script":{"type":"Optional[String[0]]","sensitive":false,"default_value":"undef","description":"The path to the script to run. Mutually exclusive with command and task."},"task":{"type":"Optional[String[0]]","sensitive":false,"default_value":"undef","description":"The name of the task to run. Mutually exclusive with command and script."},"targets":{"type":"TargetSpec","sensitive":false,"description":"The list of targets to run the action on."},"params":{"type":"Hash[String, Data]","sensitive":false,"default_value":"{}","description":"A hash of parameters and options to pass to the `run_*` function\nassociated with the action (e.g. run_task)."}},"module":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.30.0/modules/aggregate","private":false,"summary":"Run a task, command, or script on targets and aggregate the results as\na count of targets for each value of a key.","docstring":"This plan accepts an action and a list of targets. The action can be the name\nof a task, a script, or a command to run. It will run the action on the\ntargets and aggregate the key/value pairs in each Result into a hash, mapping\nthe keys to a hash of each distinct value and how many targets returned that\nvalue for the key."},"aggregate::targets":{"name":"aggregate::targets","description":"Run a task, command, or script on targets and aggregate the results as\nthe list of targets for each value of a key in the results.","parameters":{"command":{"type":"Optional[String[0]]","sensitive":false,"default_value":"undef","description":"The command to run. Mutually exclusive with script and task."},"script":{"type":"Optional[String[0]]","sensitive":false,"default_value":"undef","description":"The path to the script to run. Mutually exclusive with command and task."},"task":{"type":"Optional[String[0]]","sensitive":false,"default_value":"undef","description":"The name of the task to run. Mutually exclusive with command and script."},"targets":{"type":"TargetSpec","sensitive":false,"description":"The list of targets to run the action on."},"params":{"type":"Hash[String, Data]","sensitive":false,"default_value":"{}","description":"A hash of parameters and options to pass to the `run_*` function\nassociated with the action (e.g. run_task)."}},"module":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.30.0/modules/aggregate","private":false,"summary":"Run a task, command, or script on targets and aggregate the results as\nthe list of targets for each value of a key in the results.","docstring":"This plan accepts an action and a list of targets. The action can be the name\nof a task, a script, or a command to run. It will run the action on the\ntargets and aggregate the key/value pairs in each Result into a hash, mapping\nthe keys to a hash of each distinct value and a list of targets returning that\nvalue."},"canary":{"name":"canary","description":"Run a task, command or script on canary targets before running it on all targets.","parameters":{"task":{"type":"Optional[String[0]]","sensitive":false,"default_value":"undef","description":"The name of the task to run. Mutually exclusive with command and script."},"command":{"type":"Optional[String[0]]","sensitive":false,"default_value":"undef","description":"The command to run. Mutually exclusive with task and script."},"script":{"type":"Optional[String[0]]","sensitive":false,"default_value":"undef","description":"The script to run. Mutually exclusive with task and command."},"targets":{"type":"TargetSpec","sensitive":false,"description":"The target to run on."},"params":{"type":"Hash[String, Data]","sensitive":false,"default_value":"{}","description":"The parameters to use for the task."},"canary_size":{"type":"Integer","sensitive":false,"default_value":"1","description":"How many targets to use in the canary group."}},"module":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.30.0/modules/canary","private":false,"summary":"Run a task, command or script on canary targets before running it on all targets.","docstring":"This plan accepts a action and a $targets parameter. The action can be the name\nof a task, a script or a command to run. It will run the action on a canary\ngroup of targets and only continue to the rest of the targets if it succeeds on\nall canaries. This returns a ResultSet object with a Result for every target.\nAny skipped targets will have a 'canary/skipped-target' error kind."},"facts":{"name":"facts","description":"A plan that retrieves facts and stores in the inventory for the\nspecified targets.","parameters":{"targets":{"type":"TargetSpec","sensitive":false,"description":"List of targets to retrieve the facts for."}},"module":"/root/control-repo/.modules/facts","private":false,"summary":"A plan that retrieves facts and stores in the inventory for the\nspecified targets.","docstring":null},"facts::external":{"name":"facts::external","description":"A plan that generates external facts based on the provided modulepath and\nsets facts on specified targets.","parameters":{"path":{"type":"String","sensitive":false,"description":"The path to the directory on localhost containing external facts"},"targets":{"type":"TargetSpec","sensitive":false,"description":"The targest the collect and set facts on"}},"module":"/root/control-repo/.modules/facts","private":false,"summary":"A plan that generates external facts based on the provided modulepath and\nsets facts on specified targets.","docstring":null},"facts::info":{"name":"facts::info","description":"A plan that prints basic OS information for the specified targets. It first\nruns the facts task to retrieve facts from the targets, then compiles the\ndesired OS information from the os fact value of each targets. This plan primarily\nprovides readable formatting, and ignores targets that error.","parameters":{"targets":{"type":"TargetSpec","sensitive":false,"description":"List of the targets for which to print the OS information."}},"module":"/root/control-repo/.modules/facts","private":false,"summary":"A plan that prints basic OS information for the specified targets. It first\nruns the facts task to retrieve facts from the targets, then compiles the\ndesired OS information from the os fact value of each targets. This plan primarily\nprovides readable formatting, and ignores targets that error.","docstring":null},"ntp::acceptance::pe_agent":{"name":"ntp::acceptance::pe_agent","description":"Install PE","parameters":{},"module":"/root/control-repo/.modules/ntp","private":false,"summary":"Install PE","docstring":"Install PE Agent"},"ntp::acceptance::pe_server":{"name":"ntp::acceptance::pe_server","description":"Install PE Server","parameters":{"version":{"type":"Optional[String]","sensitive":false,"default_value":"'2019.8.5'"},"pe_settings":{"type":"Optional[Hash]","sensitive":false,"default_value":"{ password => 'puppetlabs' }"}},"module":"/root/control-repo/.modules/ntp","private":false,"summary":"Install PE Server","docstring":"Install PE Server"},"ntp::acceptance::provision_integration":{"name":"ntp::acceptance::provision_integration","description":"Provisions machines","parameters":{"image":{"type":"Optional[String]","sensitive":false,"default_value":"'centos-7'"},"provision_type":{"type":"Optional[String]","sensitive":false,"default_value":"'provision_service'"}},"module":"/root/control-repo/.modules/ntp","private":false,"summary":"Provisions machines","docstring":"Provisions machines for integration testing"},"peadm::add_compiler":{"name":"peadm::add_compiler","description":"Proxy plan for peadm::add_compilers.","parameters":{"avail_group_letter":{"type":"Enum['A', 'B']","sensitive":false,"default_value":"'A'","description":"_ Either A or B; whichever of the two letter designations the compiler are being assigned to"},"compiler_host":{"type":"Peadm::SingleTargetSpec","sensitive":false,"description":"_ The hostname and certname of the new compiler"},"dns_alt_names":{"type":"Optional[String[1]]","sensitive":false,"default_value":"undef","description":"_ A comma-separated list of DNS alt names for the compiler."},"primary_host":{"type":"Peadm::SingleTargetSpec","sensitive":false,"description":"_ The hostname and certname of the primary Puppet server"},"primary_postgresql_host":{"type":"Optional[Peadm::SingleTargetSpec]","sensitive":false,"default_value":"undef","description":"_ The hostname and certname of the PE-PostgreSQL server with availability group $avail_group_letter"}},"module":"/root/control-repo/.modules/peadm","private":false,"summary":"Proxy plan for peadm::add_compilers.","docstring":null},"peadm::add_compilers":{"name":"peadm::add_compilers","description":"Add new compilers to a PE architecture or replace an existing with new configuration.","parameters":{"avail_group_letter":{"type":"Enum['A', 'B']","sensitive":false,"default_value":"'A'","description":"_ Either A or B; whichever of the two letter designations the compilers are being assigned to"},"compiler_hosts":{"type":"TargetSpec","sensitive":false,"description":"_ The hostnames and certnames of the new compilers"},"dns_alt_names":{"type":"Optional[Array[String[1]]]","sensitive":false,"default_value":"undef","description":"_ An array of strings, where each string is a comma-separated list of DNS alt names for the compilers. Order matters; if a compiler doesn't need dns_alt_names, use \"undef\" as string."},"primary_host":{"type":"Peadm::SingleTargetSpec","sensitive":false,"description":"_ The hostname and certname of the primary Puppet server"},"primary_postgresql_host":{"type":"Optional[Peadm::SingleTargetSpec]","sensitive":false,"default_value":"undef","description":"_ The hostname and certname of the PE-PostgreSQL server with availability group $avail_group_letter"}},"module":"/root/control-repo/.modules/peadm","private":false,"summary":"Add new compilers to a PE architecture or replace an existing with new configuration.","docstring":null},"peadm::add_database":{"name":"peadm::add_database","description":null,"parameters":{"targets":{"type":"Peadm::SingleTargetSpec","sensitive":false},"primary_host":{"type":"Peadm::SingleTargetSpec","sensitive":false},"mode":{"type":"Optional[Enum['init', 'pair']]","sensitive":false,"default_value":"undef"},"begin_at_step":{"type":"Optional[Enum[\n      'init-db-node',\n      'replicate-db',\n      'update-classification',\n      'update-db-settings',\n      'cleanup-db',\n  'finalize']]","sensitive":false,"default_value":"undef"}},"module":"/root/control-repo/.modules/peadm","private":false,"summary":null,"docstring":null},"peadm::add_replica":{"name":"peadm::add_replica","description":"Add or replace a replica host.\nSupported use cases:\n1: Adding a replica to an existing primary.\n2: The existing replica is broken, we have a fresh new VM we want to provision the replica to.","parameters":{"primary_host":{"type":"Peadm::SingleTargetSpec","sensitive":false,"description":"- The hostname and certname of the primary Puppet server"},"replica_host":{"type":"Peadm::SingleTargetSpec","sensitive":false,"description":"- The hostname and certname of the replica VM"},"replica_postgresql_host":{"type":"Optional[Peadm::SingleTargetSpec]","sensitive":false,"default_value":"undef","description":"- The hostname and certname of the host with the replica PE-PosgreSQL database.\nCan be a separate host in an XL architecture, or undef in Standard or Large."},"token_file":{"type":"Optional[String]","sensitive":false,"default_value":"undef","description":"- (optional) the token file in a different location than the default."}},"module":"/root/control-repo/.modules/peadm","private":false,"summary":"Add or replace a replica host.\nSupported use cases:\n1: Adding a replica to an existing primary.\n2: The existing replica is broken, we have a fresh new VM we want to provision the replica to.","docstring":null},"peadm::backup":{"name":"peadm::backup","description":"Backup puppet primary configuration","parameters":{"targets":{"type":"Peadm::SingleTargetSpec","sensitive":false,"description":"This should be the primary puppetserver for the puppet cluster"},"backup_type":{"type":"Enum['recovery', 'custom']","sensitive":false,"default_value":"'recovery'","description":"Currently, the recovery and custom backup types are supported"},"backup":{"type":"Peadm::Recovery_opts","sensitive":false,"default_value":"{}","description":"A hash of custom backup options, see the peadm::recovery_opts_default() function for the default values"},"output_directory":{"type":"String","sensitive":false,"default_value":"'/tmp'","description":"The directory to place the backup in"}},"module":"/root/control-repo/.modules/peadm","private":false,"summary":"Backup puppet primary configuration","docstring":null},"peadm::backup_ca":{"name":"peadm::backup_ca","description":null,"parameters":{"target":{"type":"Peadm::SingleTargetSpec","sensitive":false},"output_directory":{"type":"Optional[String]","sensitive":false,"default_value":"'/tmp'"}},"module":"/root/control-repo/.modules/peadm","private":false,"summary":null,"docstring":null},"peadm::convert":{"name":"peadm::convert","description":"Convert an existing PE cluster to a PEAdm-managed cluster","parameters":{"begin_at_step":{"type":"Optional[Peadm::ConvertSteps]","sensitive":false,"default_value":"undef","description":"The step where the plan should start. If not set, it will start at the beginning"},"primary_host":{"type":"Peadm::SingleTargetSpec","sensitive":false},"replica_host":{"type":"Optional[Peadm::SingleTargetSpec]","sensitive":false,"default_value":"undef"},"compiler_hosts":{"type":"Optional[TargetSpec]","sensitive":false,"default_value":"undef"},"legacy_compilers":{"type":"Optional[TargetSpec]","sensitive":false,"default_value":"undef"},"primary_postgresql_host":{"type":"Optional[Peadm::SingleTargetSpec]","sensitive":false,"default_value":"undef"},"replica_postgresql_host":{"type":"Optional[Peadm::SingleTargetSpec]","sensitive":false,"default_value":"undef"},"compiler_pool_address":{"type":"String","sensitive":false,"default_value":"$primary_host"},"internal_compiler_a_pool_address":{"type":"Optional[String]","sensitive":false,"default_value":"undef"},"internal_compiler_b_pool_address":{"type":"Optional[String]","sensitive":false,"default_value":"undef"},"dns_alt_names":{"type":"Array[String]","sensitive":false,"default_value":"[]"}},"module":"/root/control-repo/.modules/peadm","private":false,"summary":"Convert an existing PE cluster to a PEAdm-managed cluster","docstring":"This plan sets required certificate extensions on PE nodes, and configures\nthe required PE node groups to make an existing cluster compatible with\nmanagement using PEAdm."},"peadm::convert_compiler_to_legacy":{"name":"peadm::convert_compiler_to_legacy","description":null,"parameters":{"primary_host":{"type":"Peadm::SingleTargetSpec","sensitive":false},"legacy_hosts":{"type":"TargetSpec","sensitive":false},"remove_pdb":{"type":"Optional[Boolean]","sensitive":false,"default_value":"true"}},"module":"/root/control-repo/.modules/peadm","private":true,"summary":null,"docstring":null},"peadm::install":{"name":"peadm::install","description":"Install a new PE cluster","parameters":{"compiler_pool_address":{"type":"Optional[String]","sensitive":false,"default_value":"undef","description":"The service address used by agents to connect to compilers, or the Puppet\nservice. Typically this is a load balancer."},"internal_compiler_a_pool_address":{"type":"Optional[String]","sensitive":false,"default_value":"undef","description":"A load balancer address directing traffic to any of the \"A\" pool\ncompilers. This is used for DR configuration in large and extra large\narchitectures."},"internal_compiler_b_pool_address":{"type":"Optional[String]","sensitive":false,"default_value":"undef","description":"A load balancer address directing traffic to any of the \"B\" pool\ncompilers. This is used for DR configuration in large and extra large\narchitectures."},"pe_installer_source":{"type":"Optional[Stdlib::HTTPSUrl]","sensitive":false,"default_value":"undef","description":"The URL to download the Puppet Enterprise installer media from. If not\nspecified, PEAdm will attempt to download PE installation media from its\nstandard public source. When specified, PEAdm will download directly from the\nURL given."},"ldap_config":{"type":"Optional[Peadm::Ldap_config]","sensitive":false,"default_value":"undef","description":"If specified, configures PE RBAC DS with the supplied configuration hash.\nThe parameter should be set to a valid set of connection settings as\ndocumented for the PE RBAC /ds endpoint. See:\nhttps://puppet.com/docs/pe/latest/rbac_api_v1_directory.html#put_ds-request_format"},"final_agent_state":{"type":"Enum['running', 'stopped']","sensitive":false,"default_value":"'running'","description":"Configures the state the puppet agent should be in on infrastructure nodes\nafter PE is configured successfully."},"stagingdir":{"type":"Optional[String]","sensitive":false,"default_value":"undef","description":"Directory on the Bolt host where the installer tarball will be cached if\ndownload_mode is 'bolthost' (default)"},"uploaddir":{"type":"Optional[String]","sensitive":false,"default_value":"undef","description":"Directory the installer tarball will be uploaded to or expected to be in\nfor offline usage."},"primary_host":{"type":"Peadm::SingleTargetSpec","sensitive":false},"replica_host":{"type":"Optional[Peadm::SingleTargetSpec]","sensitive":false,"default_value":"undef"},"compiler_hosts":{"type":"Optional[TargetSpec]","sensitive":false,"default_value":"undef"},"legacy_compilers":{"type":"Optional[TargetSpec]","sensitive":false,"default_value":"undef"},"primary_postgresql_host":{"type":"Optional[Peadm::SingleTargetSpec]","sensitive":false,"default_value":"undef"},"replica_postgresql_host":{"type":"Optional[Peadm::SingleTargetSpec]","sensitive":false,"default_value":"undef"},"console_password":{"type":"String","sensitive":false},"version":{"type":"Peadm::Pe_version","sensitive":false,"default_value":"'2021.7.9'"},"dns_alt_names":{"type":"Optional[Array[String]]","sensitive":false,"default_value":"undef"},"pe_conf_data":{"type":"Optional[Hash]","sensitive":false,"default_value":"{}"},"code_manager_auto_configure":{"type":"Optional[Boolean]","sensitive":false,"default_value":"undef"},"r10k_remote":{"type":"Optional[String]","sensitive":false,"default_value":"undef"},"r10k_private_key_file":{"type":"Optional[String]","sensitive":false,"default_value":"undef"},"r10k_private_key_content":{"type":"Optional[Peadm::Pem]","sensitive":false,"default_value":"undef"},"r10k_known_hosts":{"type":"Optional[Peadm::Known_hosts]","sensitive":false,"default_value":"undef"},"deploy_environment":{"type":"Optional[String]","sensitive":false,"default_value":"undef"},"license_key_file":{"type":"Optional[String]","sensitive":false,"default_value":"undef"},"license_key_content":{"type":"Optional[String]","sensitive":false,"default_value":"undef"},"download_mode":{"type":"Enum['direct', 'bolthost']","sensitive":false,"default_value":"'bolthost'"},"permit_unsafe_versions":{"type":"Boolean","sensitive":false,"default_value":"false"},"token_lifetime":{"type":"String","sensitive":false,"default_value":"'1y'"}},"module":"/root/control-repo/.modules/peadm","private":false,"summary":"Install a new PE cluster","docstring":null},"peadm::misc::divert_code_manager":{"name":"peadm::misc::divert_code_manager","description":"This plan exists to account for a scenario where a PE XL","parameters":{"primary_host":{"type":"Any","sensitive":false}},"module":"/root/control-repo/.modules/peadm","private":true,"summary":"This plan exists to account for a scenario where a PE XL","docstring":"architecture is in use, but code manager is not.\n\nThe PE DR solution technically requires code manager be enabled and running.\nHowever, in unusual circumstances, it may not be possible for a customer to\nactually use code manager. This plan allows DR to be used by leaving\nfile-sync turned on, but directing file-sync to deploy code to a\nnon-standard, unused directory. This leaves the Puppet codedir available for\nmanagement via an alternative means.\n\nThis is a stop-gap at best. This should not be attempted without advisement."},"peadm::modify_cert_extensions":{"name":"peadm::modify_cert_extensions","description":null,"parameters":{"targets":{"type":"TargetSpec","sensitive":false},"primary_host":{"type":"Peadm::SingleTargetSpec","sensitive":false},"add":{"type":"Hash","sensitive":false,"default_value":"{}"},"remove":{"type":"Array","sensitive":false,"default_value":"[]"}},"module":"/root/control-repo/.modules/peadm","private":true,"summary":null,"docstring":null},"peadm::modify_certificate":{"name":"peadm::modify_certificate","description":"Modify the certificate of one or more targets","parameters":{"targets":{"type":"TargetSpec","sensitive":false},"primary_host":{"type":"Peadm::SingleTargetSpec","sensitive":false},"add_extensions":{"type":"Hash","sensitive":false,"default_value":"{}"},"remove_extensions":{"type":"Array","sensitive":false,"default_value":"[]"},"dns_alt_names":{"type":"Optional[Array]","sensitive":false,"default_value":"undef"},"force_regenerate":{"type":"Boolean","sensitive":false,"default_value":"false"}},"module":"/root/control-repo/.modules/peadm","private":false,"summary":"Modify the certificate of one or more targets","docstring":"Certificates can be modified by adding extensions, removing extensions, or\nsetting DNS alternative names."},"peadm::restore":{"name":"peadm::restore","description":"Restore puppet primary configuration","parameters":{"targets":{"type":"Peadm::SingleTargetSpec","sensitive":false,"description":"This should be the primary puppetserver for the puppet cluster"},"restore_type":{"type":"Enum['recovery', 'recovery-db', 'custom']","sensitive":false,"default_value":"'recovery'","description":"Choose from `recovery`, `recovery-db` and `custom`"},"restore":{"type":"Peadm::Recovery_opts","sensitive":false,"default_value":"{}","description":"A hash of custom backup options, see the peadm::recovery_opts_default() function for the default values"},"input_file":{"type":"Pattern[/.*\\.tar\\.gz$/]","sensitive":false,"description":"The file containing the backup to restore from"}},"module":"/root/control-repo/.modules/peadm","private":false,"summary":"Restore puppet primary configuration","docstring":null},"peadm::restore_ca":{"name":"peadm::restore_ca","description":null,"parameters":{"target":{"type":"Peadm::SingleTargetSpec","sensitive":false},"file_path":{"type":"String","sensitive":false},"recovery_directory":{"type":"Optional[String]","sensitive":false,"default_value":"'/tmp/peadm_recovery'"}},"module":"/root/control-repo/.modules/peadm","private":false,"summary":null,"docstring":null},"peadm::status":{"name":"peadm::status","description":"Return status information from one or more PE clusters in a table format","parameters":{"targets":{"type":"TargetSpec","sensitive":false,"description":"These are a list of the primary puppetservers from one or multiple puppet stacks"},"format":{"type":"Enum[json,table]","sensitive":false,"default_value":"'table'","description":"The output format to dump to stdout (json or table)"},"summarize":{"type":"Boolean","sensitive":false,"default_value":"true","description":"Controls the type of json output to render, defaults to true"},"verbose":{"type":"Boolean","sensitive":false,"default_value":"false","description":"Toggles the output to show all the operationally services, can be loads more data"},"colors":{"type":"Boolean","sensitive":false,"default_value":"$format ? { 'json' => false, default => true","description":"Toggles the usage of colors, you may want to disable if the format is json"}},"module":"/root/control-repo/.modules/peadm","private":false,"summary":"Return status information from one or more PE clusters in a table format","docstring":null},"peadm::subplans::component_install":{"name":"peadm::subplans::component_install","description":"Install a new PEADM component","parameters":{"targets":{"type":"Peadm::SingleTargetSpec","sensitive":false,"description":"_ The hostname of the new component server"},"primary_host":{"type":"Peadm::SingleTargetSpec","sensitive":false,"description":"_ The hostname the primary Puppet server"},"avail_group_letter":{"type":"Enum['A', 'B']","sensitive":false,"description":"_ Either A or B; whichever of the two letter designations the component is assigned to"},"dns_alt_names":{"type":"Optional[Variant[String[1], Array]]","sensitive":false,"default_value":"undef","description":"_ A comma_separated list of DNS alt names for the component"},"role":{"type":"Optional[String[1]]","sensitive":false,"default_value":"undef","description":"_ Optional PEADM role the component will serve"}},"module":"/root/control-repo/.modules/peadm","private":true,"summary":"Install a new PEADM component","docstring":null},"peadm::subplans::configure":{"name":"peadm::subplans::configure","description":"Configure first-time classification and DR setup","parameters":{"compiler_pool_address":{"type":"String","sensitive":false,"default_value":"$primary_host.peadm::certname(","description":"The service address used by agents to connect to compilers, or the Puppet\nservice. Typically this is a load balancer."},"internal_compiler_a_pool_address":{"type":"Optional[String]","sensitive":false,"default_value":"undef","description":"A load balancer address directing traffic to any of the \"A\" pool\ncompilers. This is used for DR configuration in large and extra large\narchitectures."},"internal_compiler_b_pool_address":{"type":"Optional[String]","sensitive":false,"default_value":"undef","description":"A load balancer address directing traffic to any of the \"B\" pool\ncompilers. This is used for DR configuration in large and extra large\narchitectures."},"ldap_config":{"type":"Optional[Peadm::Ldap_config]","sensitive":false,"default_value":"undef","description":"This hash contains the options necessary for configuring the LDAP\nconnection on the main server."},"final_agent_state":{"type":"Enum['running', 'stopped']","sensitive":false,"default_value":"'running'","description":"Configures the state the puppet agent should be in on infrastructure nodes\nafter PE is configured successfully."},"primary_host":{"type":"Peadm::SingleTargetSpec","sensitive":false},"replica_host":{"type":"Optional[Peadm::SingleTargetSpec]","sensitive":false,"default_value":"undef"},"compiler_hosts":{"type":"Optional[TargetSpec]","sensitive":false,"default_value":"undef"},"legacy_compilers":{"type":"Optional[TargetSpec]","sensitive":false,"default_value":"undef"},"primary_postgresql_host":{"type":"Optional[Peadm::SingleTargetSpec]","sensitive":false,"default_value":"undef"},"replica_postgresql_host":{"type":"Optional[Peadm::SingleTargetSpec]","sensitive":false,"default_value":"undef"},"token_file":{"type":"Optional[String]","sensitive":false,"default_value":"undef"},"deploy_environment":{"type":"Optional[String]","sensitive":false,"default_value":"undef"},"stagingdir":{"type":"String","sensitive":false,"default_value":"'/tmp'"}},"module":"/root/control-repo/.modules/peadm","private":true,"summary":"Configure first-time classification and DR setup","docstring":null},"peadm::subplans::db_populate":{"name":"peadm::subplans::db_populate","description":"Destructively (re)populates a new or existing database with the contents or a known good source","parameters":{"source_host":{"type":"Peadm::SingleTargetSpec","sensitive":false,"description":"_ The hostname of the database containing data"},"targets":{"type":"Peadm::SingleTargetSpec","sensitive":false}},"module":"/root/control-repo/.modules/peadm","private":true,"summary":"Destructively (re)populates a new or existing database with the contents or a known good source","docstring":"This plan is in development and currently considered experimental."},"peadm::subplans::install":{"name":"peadm::subplans::install","description":"Perform initial installation of Puppet Enterprise Extra Large","parameters":{"r10k_remote":{"type":"Optional[String]","sensitive":false,"default_value":"undef","description":"The clone URL of the controlrepo to use. This just uses the basic config\nfrom the documentaion https://puppet.com/docs/pe/2019.0/code_mgr_config.html"},"r10k_private_key_file":{"type":"Optional[String]","sensitive":false,"default_value":"undef","description":"The private key to use for r10k. If this is a local file it will be copied\nover to the primary at /etc/puppetlabs/puppetserver/ssh/id-control_repo.rsa\nIf the file does not exist the value will simply be supplied to the primary"},"r10k_known_hosts":{"type":"Optional[Peadm::Known_hosts]","sensitive":false,"default_value":"undef","description":"Puppet Enterprise 2023.3+ requires host key verification for the\nr10k_remote host when using ssh. When setting \\$r10k_private_key, you must\nalso provide \\$r10k_known_hosts information in the form of an array of\nhashes with 'name', 'type' and 'key' information for hostname, key-type and\npublic key. Please refer to the Puppet Enterprise 2023.3+ Configure Code\nManager documentation for further details."},"license_key_file":{"type":"Optional[String]","sensitive":false,"default_value":"undef","description":"The license key to use with Puppet Enterprise.  If this is a local file it\nwill be copied over to the MoM at /etc/puppetlabs/license.key\nIf the file does not exist the value will simply be supplied to the primaries"},"pe_conf_data":{"type":"Hash","sensitive":false,"default_value":"{}","description":"Config data to plane into pe.conf when generated on all hosts, this can be\nused for tuning data etc."},"pe_installer_source":{"type":"Optional[Stdlib::HTTPSUrl]","sensitive":false,"default_value":"undef","description":"The URL to download the Puppet Enterprise installer media from. If not\nspecified, PEAdm will attempt to download PE installation media from its\nstandard public source. When specified, PEAdm will download directly from the\nURL given."},"primary_host":{"type":"Peadm::SingleTargetSpec","sensitive":false},"replica_host":{"type":"Optional[Peadm::SingleTargetSpec]","sensitive":false,"default_value":"undef"},"compiler_hosts":{"type":"Optional[TargetSpec]","sensitive":false,"default_value":"undef"},"legacy_compilers":{"type":"Optional[TargetSpec]","sensitive":false,"default_value":"undef"},"primary_postgresql_host":{"type":"Optional[Peadm::SingleTargetSpec]","sensitive":false,"default_value":"undef"},"replica_postgresql_host":{"type":"Optional[Peadm::SingleTargetSpec]","sensitive":false,"default_value":"undef"},"console_password":{"type":"String","sensitive":false},"version":{"type":"Peadm::Pe_version","sensitive":false},"dns_alt_names":{"type":"Array[String]","sensitive":false,"default_value":"[]"},"code_manager_auto_configure":{"type":"Optional[Boolean]","sensitive":false,"default_value":"undef"},"r10k_private_key_content":{"type":"Optional[Peadm::Pem]","sensitive":false,"default_value":"undef"},"license_key_content":{"type":"Optional[String]","sensitive":false,"default_value":"undef"},"stagingdir":{"type":"String","sensitive":false,"default_value":"'/tmp'"},"uploaddir":{"type":"String","sensitive":false,"default_value":"'/tmp'"},"download_mode":{"type":"Enum[direct,bolthost]","sensitive":false,"default_value":"'bolthost'"},"permit_unsafe_versions":{"type":"Boolean","sensitive":false,"default_value":"false"},"token_lifetime":{"type":"String","sensitive":false,"default_value":"'1y'"}},"module":"/root/control-repo/.modules/peadm","private":true,"summary":"Perform initial installation of Puppet Enterprise Extra Large","docstring":null},"peadm::subplans::modify_certificate":{"name":"peadm::subplans::modify_certificate","description":null,"parameters":{"targets":{"type":"Peadm::SingleTargetSpec","sensitive":false},"primary_host":{"type":"TargetSpec","sensitive":false},"primary_certname":{"type":"String","sensitive":false},"add_extensions":{"type":"Hash","sensitive":false,"default_value":"{}"},"remove_extensions":{"type":"Array","sensitive":false,"default_value":"[]"},"dns_alt_names":{"type":"Optional[Array]","sensitive":false,"default_value":"undef"},"force_regenerate":{"type":"Boolean","sensitive":false,"default_value":"false"}},"module":"/root/control-repo/.modules/peadm","private":true,"summary":null,"docstring":null},"peadm::subplans::prepare_agent":{"name":"peadm::subplans::prepare_agent","description":null,"parameters":{"targets":{"type":"Peadm::SingleTargetSpec","sensitive":false},"primary_host":{"type":"Peadm::SingleTargetSpec","sensitive":false},"certificate_extensions":{"type":"Hash","sensitive":false},"dns_alt_names":{"type":"Optional[Array]","sensitive":false,"default_value":"undef"}},"module":"/root/control-repo/.modules/peadm","private":true,"summary":null,"docstring":null},"peadm::uninstall":{"name":"peadm::uninstall","description":"Single-entry-point plan for uninstalling Puppet Enterprise","parameters":{"targets":{"type":"TargetSpec","sensitive":false}},"module":"/root/control-repo/.modules/peadm","private":true,"summary":"Single-entry-point plan for uninstalling Puppet Enterprise","docstring":"This plan is in development and currently considered experimental."},"peadm::update_compiler_extensions":{"name":"peadm::update_compiler_extensions","description":null,"parameters":{"compiler_hosts":{"type":"TargetSpec","sensitive":false},"primary_host":{"type":"Peadm::SingleTargetSpec","sensitive":false},"legacy":{"type":"Boolean","sensitive":false,"default_value":"false"}},"module":"/root/control-repo/.modules/peadm","private":true,"summary":null,"docstring":null},"peadm::upgrade":{"name":"peadm::upgrade","description":"Upgrade a PEAdm-managed cluster","parameters":{"compiler_pool_address":{"type":"Optional[String]","sensitive":false,"default_value":"undef","description":"The service address used by agents to connect to compilers, or the Puppet\nservice. Typically this is a load balancer."},"internal_compiler_a_pool_address":{"type":"Optional[String]","sensitive":false,"default_value":"undef","description":"A load balancer address directing traffic to any of the \"A\" pool\ncompilers. This is used for DR configuration in large and extra large\narchitectures."},"internal_compiler_b_pool_address":{"type":"Optional[String]","sensitive":false,"default_value":"undef","description":"A load balancer address directing traffic to any of the \"B\" pool\ncompilers. This is used for DR configuration in large and extra large\narchitectures."},"pe_installer_source":{"type":"Optional[Stdlib::HTTPSUrl]","sensitive":false,"default_value":"undef","description":"The URL to download the Puppet Enterprise installer media from. If not\nspecified, PEAdm will attempt to download PE installation media from its\nstandard public source. When specified, PEAdm will download directly from the\nURL given."},"final_agent_state":{"type":"Enum['running', 'stopped']","sensitive":false,"default_value":"'running'","description":"Configures the state the puppet agent should be in on infrastructure nodes\nafter PE is upgraded successfully."},"r10k_known_hosts":{"type":"Optional[Peadm::Known_hosts]","sensitive":false,"default_value":"undef","description":"Puppet Enterprise 2023.3+ requires host key verification for the\nr10k_remote host when using ssh. you must provide \\$r10k_known_hosts\ninformation in the form of an array of hashes with 'name', 'type' and 'key'\ninformation for hostname, key-type and public key."},"stagingdir":{"type":"String","sensitive":false,"default_value":"'/tmp'","description":"Directory on the Bolt host where the installer tarball will be cached if\ndownload_mode is 'bolthost' (default)"},"uploaddir":{"type":"String","sensitive":false,"default_value":"'/tmp'","description":"Directory the installer tarball will be uploaded to or expected to be in\nfor offline usage."},"begin_at_step":{"type":"Optional[Peadm::UpgradeSteps]","sensitive":false,"default_value":"undef","description":"The step where the plan should start. If not set, it will start at the beginning"},"primary_host":{"type":"Peadm::SingleTargetSpec","sensitive":false},"replica_host":{"type":"Optional[Peadm::SingleTargetSpec]","sensitive":false,"default_value":"undef"},"compiler_hosts":{"type":"Optional[TargetSpec]","sensitive":false,"default_value":"undef"},"primary_postgresql_host":{"type":"Optional[Peadm::SingleTargetSpec]","sensitive":false,"default_value":"undef"},"replica_postgresql_host":{"type":"Optional[Peadm::SingleTargetSpec]","sensitive":false,"default_value":"undef"},"version":{"type":"Optional[Peadm::Pe_version]","sensitive":false,"default_value":"undef"},"token_file":{"type":"Optional[String]","sensitive":false,"default_value":"undef"},"download_mode":{"type":"Enum[direct,bolthost]","sensitive":false,"default_value":"'bolthost'"},"permit_unsafe_versions":{"type":"Boolean","sensitive":false,"default_value":"false"}},"module":"/root/control-repo/.modules/peadm","private":false,"summary":"Upgrade a PEAdm-managed cluster","docstring":null},"peadm::util::code_sync_status":{"name":"peadm::util::code_sync_status","description":null,"parameters":{"targets":{"type":"Peadm::SingleTargetSpec","sensitive":false}},"module":"/root/control-repo/.modules/peadm","private":true,"summary":null,"docstring":null},"peadm::util::copy_file":{"name":"peadm::util::copy_file","description":null,"parameters":{"targets":{"type":"TargetSpec","sensitive":false},"source_host":{"type":"Peadm::SingleTargetSpec","sensitive":false},"path":{"type":"Stdlib::Absolutepath","sensitive":false}},"module":"/root/control-repo/.modules/peadm","private":true,"summary":null,"docstring":null},"peadm::util::db_disable_pglogical":{"name":"peadm::util::db_disable_pglogical","description":null,"parameters":{"targets":{"type":"Peadm::SingleTargetSpec","sensitive":false},"databases":{"type":"Array[String[1]]","sensitive":false}},"module":"/root/control-repo/.modules/peadm","private":true,"summary":null,"docstring":null},"peadm::util::db_purge":{"name":"peadm::util::db_purge","description":null,"parameters":{"targets":{"type":"TargetSpec","sensitive":false},"databases":{"type":"Array[String[1]]","sensitive":false}},"module":"/root/control-repo/.modules/peadm","private":true,"summary":null,"docstring":null},"peadm::util::init_db_server":{"name":"peadm::util::init_db_server","description":null,"parameters":{"db_host":{"type":"String[1]","sensitive":false},"install_pe":{"type":"Boolean","sensitive":false,"default_value":"false"},"pe_version":{"type":"String[1]","sensitive":false,"default_value":"'2023.5.0'"},"pe_platform":{"type":"String[1]","sensitive":false,"default_value":"'el-8-x86_64'"}},"module":"/root/control-repo/.modules/peadm","private":false,"summary":null,"docstring":null},"peadm::util::insert_csr_extension_requests":{"name":"peadm::util::insert_csr_extension_requests","description":null,"parameters":{"targets":{"type":"TargetSpec","sensitive":false},"extension_requests":{"type":"Hash","sensitive":false},"merge":{"type":"Boolean","sensitive":false,"default_value":"true"}},"module":"/root/control-repo/.modules/peadm","private":true,"summary":null,"docstring":null},"peadm::util::retrieve_and_upload":{"name":"peadm::util::retrieve_and_upload","description":null,"parameters":{"nodes":{"type":"TargetSpec","sensitive":false},"source":{"type":"String[1]","sensitive":false},"local_path":{"type":"String[1]","sensitive":false},"upload_path":{"type":"String[1]","sensitive":false}},"module":"/root/control-repo/.modules/peadm","private":true,"summary":null,"docstring":null},"peadm::util::sanitize_pg_pe_conf":{"name":"peadm::util::sanitize_pg_pe_conf","description":null,"parameters":{"targets":{"type":"TargetSpec","sensitive":false},"primary_host":{"type":"Peadm::SingleTargetSpec","sensitive":false}},"module":"/root/control-repo/.modules/peadm","private":true,"summary":null,"docstring":null},"peadm::util::update_classification":{"name":"peadm::util::update_classification","description":"Configure classification","parameters":{"targets":{"type":"Peadm::SingleTargetSpec","sensitive":false},"peadm_config":{"type":"Optional[Hash]","sensitive":false,"default_value":"undef"},"server_a_host":{"type":"Optional[Peadm::SingleTargetSpec]","sensitive":false,"default_value":"undef"},"server_b_host":{"type":"Optional[Peadm::SingleTargetSpec]","sensitive":false,"default_value":"undef"},"postgresql_a_host":{"type":"Optional[Peadm::SingleTargetSpec]","sensitive":false,"default_value":"undef"},"postgresql_b_host":{"type":"Optional[Peadm::SingleTargetSpec]","sensitive":false,"default_value":"undef"},"compiler_pool_address":{"type":"Optional[String]","sensitive":false,"default_value":"undef"},"internal_compiler_a_pool_address":{"type":"Optional[String]","sensitive":false,"default_value":"undef"},"internal_compiler_b_pool_address":{"type":"Optional[String]","sensitive":false,"default_value":"undef"}},"module":"/root/control-repo/.modules/peadm","private":true,"summary":"Configure classification","docstring":null},"peadm::util::update_db_setting":{"name":"peadm::util::update_db_setting","description":"Make updates to PuppetDB database settings","parameters":{"targets":{"type":"TargetSpec","sensitive":false},"postgresql_host":{"type":"Optional[Peadm::SingleTargetSpec]","sensitive":false,"default_value":"undef"},"peadm_config":{"type":"Optional[Hash]","sensitive":false,"default_value":"undef"},"override":{"type":"Boolean","sensitive":false,"default_value":"false"}},"module":"/root/control-repo/.modules/peadm","private":true,"summary":"Make updates to PuppetDB database settings","docstring":null},"puppet_agent::run":{"name":"puppet_agent::run","description":"Starts a Puppet agent run on the specified targets.\nNote: This plan may cause issues when run in Puppet Enterprise.","parameters":{"targets":{"type":"TargetSpec","sensitive":false,"description":"The targets to start a Puppet agent run on."},"noop":{"type":"Boolean","sensitive":false,"default_value":"false","description":"if true, all runs will use --noop"},"environment":{"type":"Optional[String[1]]","sensitive":false,"default_value":"undef","description":"the desired puppet code environment"}},"module":"/root/control-repo/.modules/puppet_agent","private":false,"summary":null,"docstring":"Starts a Puppet agent run on the specified targets.\nNote: This plan may cause issues when run in Puppet Enterprise."},"puppet_connect::test_input_data":{"name":"puppet_connect::test_input_data","description":"Tests that the provided Puppet Connect input data is complete, meaning that all consuming inventory targets are connectable.\nYou should run this plan with the following command:\n    PUPPET_CONNECT_INPUT_DATA=/path/to/input_data.yaml bolt plan run puppet_connect::test_input_data\nwhere /path/to/input_data.yaml is the path to the input_data.yaml file containing the key-value input for the\npuppet_connect_data plugin. If the plan fails on some targets, then you can use Bolt's --rerun option to rerun the plan on\njust the failed targets:\n    PUPPET_CONNECT_INPUT_DATA=/path/to/input_data.yaml bolt plan run puppet_connect::test_input_data --rerun failure\nNote that this plan should only be used as part of the copy-pastable \"test input data\" workflow specified in the Puppet\nConnect docs.","parameters":{"targets":{"type":"TargetSpec","sensitive":false,"default_value":"'all'","description":"The set of targets to test. Usually this should be 'all', the default."}},"module":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.30.0/modules/puppet_connect","private":false,"summary":"Tests that the provided Puppet Connect input data is complete, meaning that all consuming inventory targets are connectable.\nYou should run this plan with the following command:\n    PUPPET_CONNECT_INPUT_DATA=/path/to/input_data.yaml bolt plan run puppet_connect::test_input_data\nwhere /path/to/input_data.yaml is the path to the input_data.yaml file containing the key-value input for the\npuppet_connect_data plugin. If the plan fails on some targets, then you can use Bolt's --rerun option to rerun the plan on\njust the failed targets:\n    PUPPET_CONNECT_INPUT_DATA=/path/to/input_data.yaml bolt plan run puppet_connect::test_input_data --rerun failure\nNote that this plan should only be used as part of the copy-pastable \"test input data\" workflow specified in the Puppet\nConnect docs.","docstring":"the targets. Note that this query currently consists of running the 'echo'\ncommand."},"puppetdb_fact":{"name":"puppetdb_fact","description":"Collect facts for the specified targets from PuppetDB and store them\non the Targets.","parameters":{"targets":{"type":"TargetSpec","sensitive":false,"description":"The targets to collect facts for."}},"module":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.30.0/modules/puppetdb_fact","private":false,"summary":"Collect facts for the specified targets from PuppetDB and store them\non the Targets.","docstring":"This plan accepts a list of targets to collect facts for from the configured\nPuppetDB connection. After collecting facts, they are stored on each target's\nTarget object. The updated facts can then be accessed using `$target.facts`."},"reboot":{"name":"reboot","description":"Reboots targets and waits for them to be available again.","parameters":{"targets":{"type":"TargetSpec","sensitive":false,"description":"Targets to reboot."},"message":{"type":"Optional[String]","sensitive":false,"default_value":"undef","description":"Message to log with the reboot (for platforms that support it)."},"reboot_delay":{"type":"Integer[1]","sensitive":false,"default_value":"1","description":"How long (in seconds) to wait before rebooting. Defaults to 1."},"disconnect_wait":{"type":"Integer[0]","sensitive":false,"default_value":"10","description":"How long (in seconds) to wait before checking whether the server has rebooted. Defaults to 10."},"reconnect_timeout":{"type":"Integer[0]","sensitive":false,"default_value":"180","description":"How long (in seconds) to attempt to reconnect before giving up. Defaults to 180."},"retry_interval":{"type":"Integer[0]","sensitive":false,"default_value":"1","description":"How long (in seconds) to wait between retries. Defaults to 1."},"fail_plan_on_errors":{"type":"Boolean","sensitive":false,"default_value":"true","description":"Raise an error if any targets do not successfully reboot. Defaults to true."}},"module":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.30.0/modules/reboot","private":false,"summary":null,"docstring":"Reboots targets and waits for them to be available again."},"secure_env_vars":{"name":"secure_env_vars","description":"Run a command or script with sensitive environment variables.\nEnvironment variables are loaded from the BOLT_ENV_VARS environment\nvariable, which is a JSON object mapping environment variable names\nto values.","parameters":{"targets":{"type":"TargetSpec","sensitive":false,"description":"The targets to run the command or script on."},"command":{"type":"Optional[String]","sensitive":false,"default_value":"undef","description":"The command to run."},"script":{"type":"Optional[String]","sensitive":false,"default_value":"undef","description":"The script to run. This can be either a relative path, absolute path, or a file from a module."}},"module":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.30.0/modules/secure_env_vars","private":false,"summary":null,"docstring":"Run a command or script with sensitive environment variables.\nEnvironment variables are loaded from the BOLT_ENV_VARS environment\nvariable, which is a JSON object mapping environment variable names\nto values."},"terraform::apply":{"name":"terraform::apply","description":null,"parameters":{"dir":{"type":"Optional[String[1]]","sensitive":false,"default_value":"undef"},"state":{"type":"Optional[String[1]]","sensitive":false,"default_value":"undef"},"state_out":{"type":"Optional[String[1]]","sensitive":false,"default_value":"undef"},"target":{"type":"Optional[Variant[String[1], Array[String[1]]]]","sensitive":false,"default_value":"undef"},"var":{"type":"Optional[Hash]","sensitive":false,"default_value":"undef"},"var_file":{"type":"Optional[Variant[String[1], Array[String[1]]]]","sensitive":false,"default_value":"undef"},"return_output":{"type":"Optional[Boolean]","sensitive":false,"default_value":"false"},"refresh_state":{"type":"Optional[Boolean]","sensitive":false,"default_value":"false"}},"module":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.30.0/modules/terraform","private":false,"summary":null,"docstring":null},"terraform::destroy":{"name":"terraform::destroy","description":null,"parameters":{"dir":{"type":"Optional[String[1]]","sensitive":false,"default_value":"undef"},"state":{"type":"Optional[String[1]]","sensitive":false,"default_value":"undef"},"state_out":{"type":"Optional[String[1]]","sensitive":false,"default_value":"undef"},"target":{"type":"Optional[Variant[String[1], Array[String[1]]]]","sensitive":false,"default_value":"undef"},"var":{"type":"Optional[Hash]","sensitive":false,"default_value":"undef"},"var_file":{"type":"Optional[Variant[String[1], Array[String[1]]]]","sensitive":false,"default_value":"undef"}},"module":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.30.0/modules/terraform","private":false,"summary":null,"docstring":null},"terraform::refresh":{"name":"terraform::refresh","description":null,"parameters":{"dir":{"type":"Optional[String[1]]","sensitive":false,"default_value":"undef"},"state":{"type":"Optional[String[1]]","sensitive":false,"default_value":"undef"},"state_out":{"type":"Optional[String[1]]","sensitive":false,"default_value":"undef"},"target":{"type":"Optional[Variant[String[1], Array[String[1]]]]","sensitive":false,"default_value":"undef"},"var":{"type":"Optional[Hash]","sensitive":false,"default_value":"undef"},"var_file":{"type":"Optional[Variant[String[1], Array[String[1]]]]","sensitive":false,"default_value":"undef"},"return_output":{"type":"Optional[Boolean]","sensitive":false,"default_value":"false"}},"module":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.30.0/modules/terraform","private":false,"summary":null,"docstring":null}}