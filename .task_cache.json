{"apt":{"name":"apt","files":[{"name":"init.rb","path":"/root/control-repo/.modules/apt/tasks/init.rb","mtime":"2024-10-26 12:11:40 +0200"}],"metadata":{"description":"Allows you to perform apt-get functions","input_method":"stdin","parameters":{"action":{"description":"Action to perform with apt-get","type":"Enum[update, upgrade, dist-upgrade, autoremove]"}}}},"bolt_shim::command":{"name":"bolt_shim::command","files":[{"name":"command.rb","path":"/root/control-repo/.modules/bolt_shim/tasks/command.rb","mtime":"2024-10-26 11:24:00 +0200"}],"metadata":{"description":"This task serves as a bridge between Bolt and Orchestrator and is not intended to be run directly","input_method":"stdin","parameters":{"command":{"type":"String","description":"The command to be executed"}}}},"bolt_shim::script":{"name":"bolt_shim::script","files":[{"name":"script.rb","path":"/root/control-repo/.modules/bolt_shim/tasks/script.rb","mtime":"2024-10-26 11:24:00 +0200"}],"metadata":{"description":"This task serves as a bridge between Bolt and Orchestrator and is not intended to be run directly","input_method":"stdin","parameters":{"content":{"type":"String","description":"The script content to be executed","sensitive":true},"arguments":{"type":"Array[String]","description":"Arguments to pass to the script"},"name":{"type":"Optional[String]","description":"The name of the script file including extension"}}}},"bolt_shim::upload":{"name":"bolt_shim::upload","files":[{"name":"upload.rb","path":"/root/control-repo/.modules/bolt_shim/tasks/upload.rb","mtime":"2024-10-26 11:24:00 +0200"}],"metadata":{"description":"This task serves as a bridge between Bolt and Orchestrator and is not intended to be run directly","input_method":"stdin","parameters":{"directory":{"type":"Boolean","description":"Whether the file content is a directory in tgz format"},"path":{"type":"String","description":"The path to upload the file to"},"content":{"type":"String","description":"The file content to upload","sensitive":true},"mode":{"type":"Integer","description":"The numeric file mode to apply"}}}},"facts":{"name":"facts","files":[{"name":"ruby.rb","path":"/root/control-repo/.modules/facts/tasks/ruby.rb","mtime":"2024-10-26 12:12:31 +0200"},{"name":"powershell.ps1","path":"/root/control-repo/.modules/facts/tasks/powershell.ps1","mtime":"2024-10-26 12:12:31 +0200"},{"name":"bash.sh","path":"/root/control-repo/.modules/facts/tasks/bash.sh","mtime":"2024-10-26 12:12:31 +0200"},{"name":"ruby_task_helper/files/task_helper.rb","path":"/root/control-repo/.modules/ruby_task_helper/files/task_helper.rb","mtime":"2024-10-26 11:25:58 +0200"}],"metadata":{"description":"Gather system facts","parameters":{},"implementations":[{"name":"ruby.rb","requirements":["puppet-agent"],"files":["ruby_task_helper/files/task_helper.rb"],"input_method":"stdin"},{"name":"powershell.ps1","requirements":["powershell"],"input_method":"environment"},{"name":"bash.sh","requirements":["shell"],"input_method":"environment"}]}},"http_request":{"name":"http_request","files":[{"name":"init.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.30.0/modules/http_request/tasks/init.rb","mtime":"2024-05-24 00:04:59 +0200"},{"name":"ruby_task_helper/files/task_helper.rb","path":"/root/control-repo/.modules/ruby_task_helper/files/task_helper.rb","mtime":"2024-10-26 11:25:58 +0200"}],"metadata":{"description":"Make a HTTP or HTTPS request.","input_method":"stdin","parameters":{"base_url":{"description":"The fully qualified URL scheme to make requests to.","type":"String[1]"},"body":{"description":"The request body. If json_endpoint is true, must be able representable as JSON. If json_endpoint is false, must be a string.","type":"Optional[Data]"},"cacert":{"description":"An absolute path to the CA certificate.","type":"Optional[String[1]]"},"cert":{"description":"An absolute path to the client certificate.","type":"Optional[String[1]]"},"follow_redirects":{"description":"If true, automatically follows redirects.","type":"Boolean","default":true},"headers":{"description":"A map of headers to add to the payload.","type":"Optional[Hash[String, String]]"},"json_endpoint":{"description":"If true, parses the request and response bodies as JSON and sets the Content-Type header to application/json.","type":"Boolean","default":false},"key":{"description":"An absolute path to the RSA keypair.","type":"Optional[String[1]]"},"max_redirects":{"description":"The maximum number of redirects to follow when follow_redirects is true.","type":"Integer[1]","default":20},"method":{"description":"The HTTP method to use.","type":"Enum[delete, get, post, put, patch]","default":"get"},"path":{"description":"The path to append to the base_url.","type":"Optional[String[1]]"}},"files":["ruby_task_helper/files/task_helper.rb"]}},"node_manager::update_classes":{"name":"node_manager::update_classes","files":[{"name":"update_classes.rb","path":"/root/control-repo/.modules/node_manager/tasks/update_classes.rb","mtime":"2024-10-26 11:23:16 +0200"}],"metadata":{"description":"Kick off update classes","input_method":"stdin","parameters":{"environment":{"description":"Environment to update","type":"Optional[String[1]]"}}}},"package":{"name":"package","files":[{"name":"init.rb","path":"/root/control-repo/.modules/package/tasks/init.rb","mtime":"2024-10-26 11:25:20 +0200"},{"name":"windows.ps1","path":"/root/control-repo/.modules/package/tasks/windows.ps1","mtime":"2024-10-26 11:25:20 +0200"},{"name":"linux.sh","path":"/root/control-repo/.modules/package/tasks/linux.sh","mtime":"2024-10-26 11:25:20 +0200"},{"name":"package/files/common.sh","path":"/root/control-repo/.modules/package/files/common.sh","mtime":"2024-10-26 11:25:19 +0200"},{"name":"package/files/apt.sh","path":"/root/control-repo/.modules/package/files/apt.sh","mtime":"2024-10-26 11:25:19 +0200"},{"name":"package/files/pkg.sh","path":"/root/control-repo/.modules/package/files/pkg.sh","mtime":"2024-10-26 11:25:19 +0200"},{"name":"package/files/yum.sh","path":"/root/control-repo/.modules/package/files/yum.sh","mtime":"2024-10-26 11:25:19 +0200"},{"name":"package/files/zypper.sh","path":"/root/control-repo/.modules/package/files/zypper.sh","mtime":"2024-10-26 11:25:19 +0200"}],"metadata":{"description":"Manage and inspect the state of packages","input_method":"stdin","parameters":{"action":{"description":"The operation (install, status, uninstall and upgrade) to perform on the package.","type":"Enum[install, status, uninstall, upgrade]"},"name":{"description":"The name of the package to be manipulated.","type":"String[1]"},"version":{"description":"Version numbers must match the full version to install, including release if the provider uses a release moniker. Ranges or semver patterns are not accepted except for the gem package provider. For example, to install the bash package from the rpm bash-4.1.2-29.el6.x86_64.rpm, use the string '4.1.2-29.el6'.","type":"Optional[String[1]]"},"manager_options":{"description":"options to be sent to the package manager","type":"Optional[String[1]]"},"provider":{"description":"The provider to use to manage or inspect the package, defaults to the system package manager. Only used when the 'puppet-agent' feature is available on the target so we can leverage Puppet.","type":"Optional[String[1]]"}},"implementations":[{"name":"init.rb","requirements":["puppet-agent"]},{"name":"windows.ps1","requirements":["powershell"],"input_method":"powershell"},{"name":"linux.sh","requirements":["shell"],"input_method":"environment","files":["package/files/common.sh","package/files/apt.sh","package/files/pkg.sh","package/files/yum.sh","package/files/zypper.sh"]}],"extensions":{"discovery":{"friendlyName":"Manage package","type":["package"]}}}},"peadm::agent_install":{"name":"peadm::agent_install","files":[{"name":"agent_install.sh","path":"/root/control-repo/.modules/peadm/tasks/agent_install.sh","mtime":"2024-10-26 11:23:25 +0200"},{"name":"agent_install.ps1","path":"/root/control-repo/.modules/peadm/tasks/agent_install.ps1","mtime":"2024-10-26 11:23:25 +0200"}],"metadata":{"description":"Install the Puppet agent from a master","parameters":{"server":{"type":"String","description":"The resolvable name of the Puppet server to install from"},"install_flags":{"type":"Array[String]","description":"Positional arguments to pass to the shell installer","default":[]}},"implementations":[{"name":"agent_install.sh","requirements":["shell"]},{"name":"agent_install.ps1","requirements":["powershell"]}]}},"peadm::backup_classification":{"name":"peadm::backup_classification","files":[{"name":"backup_classification.rb","path":"/root/control-repo/.modules/peadm/tasks/backup_classification.rb","mtime":"2024-10-26 11:23:25 +0200"}],"metadata":{"puppet_task_version":1,"supports_noop":false,"description":"A task to call the classification api and write to file","parameters":{"directory":{"type":"String","description":"The directory to write the classification output to. Directory must exist","default":"/tmp"}},"input_method":"stdin"}},"peadm::cert_data":{"name":"peadm::cert_data","files":[{"name":"cert_data.rb","path":"/root/control-repo/.modules/peadm/tasks/cert_data.rb","mtime":"2024-10-26 11:23:26 +0200"}],"metadata":{"description":"Return certificate data related to the Puppet agent","parameters":{},"input_method":"stdin","implementations":[{"name":"cert_data.rb"}]}},"peadm::cert_valid_status":{"name":"peadm::cert_valid_status","files":[{"name":"cert_valid_status.rb","path":"/root/control-repo/.modules/peadm/tasks/cert_valid_status.rb","mtime":"2024-10-26 11:23:26 +0200"}],"metadata":{"description":"Check primary for valid state of a certificate","parameters":{"certname":{"type":"String","description":"The certifcate name to check validation of"}},"input_method":"stdin","implementations":[{"name":"cert_valid_status.rb"}]}},"peadm::check_legacy_compilers":{"name":"peadm::check_legacy_compilers","files":[{"name":"check_legacy_compilers.rb","path":"/root/control-repo/.modules/peadm/tasks/check_legacy_compilers.rb","mtime":"2024-10-26 11:23:26 +0200"}],"metadata":{}},"peadm::classify_compilers":{"name":"peadm::classify_compilers","files":[{"name":"classify_compilers.rb","path":"/root/control-repo/.modules/peadm/tasks/classify_compilers.rb","mtime":"2024-10-26 11:23:26 +0200"}],"metadata":{"description":"Classify compilers as legacy or non-legacy","parameters":{"compiler_hosts":{"type":"Array[String]","description":"List of FQDNs of compilers"}},"implementations":[{"name":"classify_compilers.rb","requirements":["shell"]}]}},"peadm::code_manager":{"name":"peadm::code_manager","files":[{"name":"code_manager.sh","path":"/root/control-repo/.modules/peadm/tasks/code_manager.sh","mtime":"2024-10-26 11:23:26 +0200"}],"metadata":{"description":"Perform various code manager actions","parameters":{"action":{"type":"String","description":"What code manager action to perform. For example: 'deploy production'; 'flush-environment-cache'; 'file-sync commit'"}},"input_method":"environment","implementations":[{"name":"code_manager.sh"}]}},"peadm::code_manager_enabled":{"name":"peadm::code_manager_enabled","files":[{"name":"code_manager_enabled.rb","path":"/root/control-repo/.modules/peadm/tasks/code_manager_enabled.rb","mtime":"2024-10-26 11:23:27 +0200"}],"metadata":{"description":"Run on a PE primary node to check if Code Manager is enabled.","parameters":{},"input_method":"stdin"}},"peadm::code_sync_status":{"name":"peadm::code_sync_status","files":[{"name":"code_sync_status.rb","path":"/root/control-repo/.modules/peadm/tasks/code_sync_status.rb","mtime":"2024-10-26 11:23:27 +0200"}],"metadata":{"puppet_task_version":1,"supports_noop":false,"description":"A task to confirm code is in sync accross the cluster for clusters with code manager configured","parameters":{"environments":{"type":"Array","description":"A list of environments to check, pass a single value of all for all","default":["all"]}},"input_method":"stdin"}},"peadm::divert_code_manager":{"name":"peadm::divert_code_manager","files":[{"name":"divert_code_manager.pp","path":"/root/control-repo/.modules/peadm/tasks/divert_code_manager.pp","mtime":"2024-10-26 11:23:27 +0200"}],"metadata":{"description":"Divert the code manager live-dir setting","parameters":{}}},"peadm::download":{"name":"peadm::download","files":[{"name":"download.sh","path":"/root/control-repo/.modules/peadm/tasks/download.sh","mtime":"2024-10-26 11:23:27 +0200"},{"name":"download.ps1","path":"/root/control-repo/.modules/peadm/tasks/download.ps1","mtime":"2024-10-26 11:23:27 +0200"}],"metadata":{"description":"Download a file using curl","parameters":{"source":{"type":"String","description":"Where to download the file from"},"path":{"type":"String","description":"Where to save the downloaded file"},"verify_download":{"type":"Boolean","description":"Whether to check the integrity of the downloaded file","default":true},"key_server":{"type":"String","description":"The GPG keyserver to retrieve GPG keys from","default":"hkp://keyserver.ubuntu.com:80"}},"implementations":[{"name":"download.sh","requirements":["shell"],"input_method":"environment"},{"name":"download.ps1","requirements":["powershell"],"input_method":"powershell"}]}},"peadm::enable_replica":{"name":"peadm::enable_replica","files":[{"name":"enable_replica.sh","path":"/root/control-repo/.modules/peadm/tasks/enable_replica.sh","mtime":"2024-10-26 11:23:27 +0200"}],"metadata":{"description":"Execute the enable replica puppet command ","parameters":{"replica":{"type":"String","description":"The name of the replica to enable"},"token_file":{"type":"Optional[String]","description":"The name of the token file to use for auth"}},"input_method":"environment","implementations":[{"name":"enable_replica.sh"}]}},"peadm::filesize":{"name":"peadm::filesize","files":[{"name":"filesize.sh","path":"/root/control-repo/.modules/peadm/tasks/filesize.sh","mtime":"2024-10-26 11:23:28 +0200"},{"name":"filesize.ps1","path":"/root/control-repo/.modules/peadm/tasks/filesize.ps1","mtime":"2024-10-26 11:23:28 +0200"}],"metadata":{"description":"Return the size of a file in bytes","parameters":{"path":{"type":"String","description":"Path to the file to return the size of"}},"implementations":[{"name":"filesize.sh","requirements":["shell"],"input_method":"environment"},{"name":"filesize.ps1","requirements":["powershell"],"input_method":"powershell"}]}},"peadm::get_group_rules":{"name":"peadm::get_group_rules","files":[{"name":"get_group_rules.rb","path":"/root/control-repo/.modules/peadm/tasks/get_group_rules.rb","mtime":"2024-10-26 11:23:28 +0200"}],"metadata":{"description":"Run on a PE primary node to return the rules currently applied to the PE Infrastructure Agent group","parameters":{},"input_method":"stdin"}},"peadm::get_peadm_config":{"name":"peadm::get_peadm_config","files":[{"name":"get_peadm_config.rb","path":"/root/control-repo/.modules/peadm/tasks/get_peadm_config.rb","mtime":"2024-10-26 11:23:28 +0200"}],"metadata":{"description":"Run on a PE primary node to return the currently configured PEAdm parameters","parameters":{},"input_method":"stdin"}},"peadm::get_psql_version":{"name":"peadm::get_psql_version","files":[{"name":"get_psql_version.rb","path":"/root/control-repo/.modules/peadm/tasks/get_psql_version.rb","mtime":"2024-10-26 11:23:28 +0200"},{"name":"ruby_task_helper/files/task_helper.rb","path":"/root/control-repo/.modules/ruby_task_helper/files/task_helper.rb","mtime":"2024-10-26 11:25:58 +0200"}],"metadata":{"description":"Run on a PE PSQL node to return the major version of the PSQL server currently installed","parameters":{},"files":["ruby_task_helper/files/task_helper.rb"],"input_method":"stdin"}},"peadm::infrastatus":{"name":"peadm::infrastatus","files":[{"name":"infrastatus.sh","path":"/root/control-repo/.modules/peadm/tasks/infrastatus.sh","mtime":"2024-10-26 11:23:28 +0200"}],"metadata":{"supports_noop":false,"description":"Runs puppet infra status and returns the output","parameters":{"format":{"type":"Enum[json,text]","description":"The type of output to return","default":"text"}},"input_method":"environment","implementations":[{"name":"infrastatus.sh"}]}},"peadm::mkdir_p_file":{"name":"peadm::mkdir_p_file","files":[{"name":"mkdir_p_file.sh","path":"/root/control-repo/.modules/peadm/tasks/mkdir_p_file.sh","mtime":"2024-10-26 11:23:29 +0200"}],"metadata":{"description":"Create a file with the specified content at the specified location","parameters":{"path":{"type":"String","description":"The fully qualified path of the file to create"},"content":{"type":"String","description":"The content to create the file with"},"owner":{"type":"Optional[String]","description":"The file owner"},"group":{"type":"Optional[String]","description":"The file group"},"mode":{"type":"Optional[String]","description":"The file mode"},"chown_r":{"type":"Optional[String]","description":"If supplied, recursively chown starting at this path"}},"input_method":"environment","implementations":[{"name":"mkdir_p_file.sh"}]}},"peadm::mv":{"name":"peadm::mv","files":[{"name":"mv.sh","path":"/root/control-repo/.modules/peadm/tasks/mv.sh","mtime":"2024-10-26 11:23:29 +0200"}],"metadata":{"description":"Wrapper task for mv command","parameters":{"source":{"type":"String","description":"Current path of file"},"target":{"type":"String","description":"New path of file"}},"input_method":"environment","implementations":[{"name":"mv.sh"}]}},"peadm::os_identification":{"name":"peadm::os_identification","files":[{"name":"os_identification.sh","path":"/root/control-repo/.modules/peadm/tasks/os_identification.sh","mtime":"2024-10-26 11:23:29 +0200"},{"name":"os_identification.ps1","path":"/root/control-repo/.modules/peadm/tasks/os_identification.ps1","mtime":"2024-10-26 11:23:29 +0200"}],"metadata":{"description":"Return the operating system runnin gon the target as a string","parameters":{},"implementations":[{"name":"os_identification.sh","requirements":["shell"],"input_method":"environment"},{"name":"os_identification.ps1","requirements":["powershell"]}]}},"peadm::pe_install":{"name":"peadm::pe_install","files":[{"name":"pe_install.sh","path":"/root/control-repo/.modules/peadm/tasks/pe_install.sh","mtime":"2024-10-26 11:23:29 +0200"},{"name":"peadm/files/task_helper.sh","path":"/root/control-repo/.modules/peadm/files/task_helper.sh","mtime":"2024-10-26 11:23:19 +0200"}],"metadata":{"description":"Install Puppet Enterprise from a tarball","parameters":{"tarball":{"type":"String","description":"The path to the Puppet Enterprise tarball"},"peconf":{"type":"Optional[String]","description":"The path to the pe.conf file"},"install_extra_large":{"type":"Optional[Boolean]","description":"If true, optimize task for known manual issues with extra-large installs. Do not use for upgrades"},"puppet_service_ensure":{"type":"Optional[Enum['stopped']]","description":"If 'stopped', ensure the Puppet agent is not running when install completes"}},"input_method":"environment","files":["peadm/files/task_helper.sh"],"implementations":[{"name":"pe_install.sh"}]}},"peadm::pe_ldap_config":{"name":"peadm::pe_ldap_config","files":[{"name":"pe_ldap_config.rb","path":"/root/control-repo/.modules/peadm/tasks/pe_ldap_config.rb","mtime":"2024-10-26 11:23:29 +0200"}],"metadata":{"description":"Set the ldap config in the PE console","parameters":{"ldap_config":{"type":"Peadm::Ldap_config","description":"The hash of options for ldap."},"pe_main":{"type":"String","description":"The PE Main server"}},"input_method":"stdin","implementations":[{"name":"pe_ldap_config.rb"}]}},"peadm::pe_uninstall":{"name":"peadm::pe_uninstall","files":[{"name":"pe_uninstall.sh","path":"/root/control-repo/.modules/peadm/tasks/pe_uninstall.sh","mtime":"2024-10-26 11:23:30 +0200"}],"metadata":{"description":"Uninstall Puppet Enterprise","parameters":{},"input_method":"environment","implementations":[{"name":"pe_uninstall.sh"}]}},"peadm::precheck":{"name":"peadm::precheck","files":[{"name":"precheck.sh","path":"/root/control-repo/.modules/peadm/tasks/precheck.sh","mtime":"2024-10-26 11:23:30 +0200"}],"metadata":{"description":"Return pre-check information about a system","parameters":{},"input_method":"environment","implementations":[{"name":"precheck.sh"}]}},"peadm::provision_replica":{"name":"peadm::provision_replica","files":[{"name":"provision_replica.sh","path":"/root/control-repo/.modules/peadm/tasks/provision_replica.sh","mtime":"2024-10-26 11:23:30 +0200"}],"metadata":{"description":"Execute the replica provision puppet command ","parameters":{"replica":{"type":"String","description":"The name of the replica to provision"},"token_file":{"type":"Optional[String]","description":"The name of the token-file for auth"},"legacy":{"type":"Boolean","description":"Set to true if provisioning a replica for PE 2019.5 or older. Defaults to false","default":false}},"input_method":"environment","implementations":[{"name":"provision_replica.sh"}]}},"peadm::puppet_infra_upgrade":{"name":"peadm::puppet_infra_upgrade","files":[{"name":"puppet_infra_upgrade.rb","path":"/root/control-repo/.modules/peadm/tasks/puppet_infra_upgrade.rb","mtime":"2024-10-26 11:23:30 +0200"}],"metadata":{"description":"Execute the puppet infra upgrade command","parameters":{"type":{"type":"Enum[compiler,replica]","description":"Which kind of infra node to upgrade"},"targets":{"type":"Array[String]","description":"The certnames of the targets to upgrade"},"token_file":{"type":"Optional[String]","description":"The path to the token file to use"},"wait_until_connected_timeout":{"type":"Integer","description":"How many seconds to wait for targets to be connected to the orchestrator","default":120}},"input_method":"stdin","implementations":[{"name":"puppet_infra_upgrade.rb"}]}},"peadm::puppet_runonce":{"name":"peadm::puppet_runonce","files":[{"name":"puppet_runonce.sh","path":"/root/control-repo/.modules/peadm/tasks/puppet_runonce.sh","mtime":"2024-10-26 11:23:30 +0200"}],"metadata":{"description":"Run the Puppet agent one time","parameters":{"environment":{"type":"Optional[String]","description":"If set, run Puppet in specified code environment"},"noop":{"type":"Optional[Boolean]","description":"If true, run Puppet in no-op mode"},"in_progress_timeout":{"type":"Integer[1]","description":"How many seconds to wait for a puppet run, that is already in progress","default":600}},"input_method":"environment","implementations":[{"name":"puppet_runonce.sh"}]}},"peadm::rbac_token":{"name":"peadm::rbac_token","files":[{"name":"rbac_token.rb","path":"/root/control-repo/.modules/peadm/tasks/rbac_token.rb","mtime":"2024-10-26 11:23:31 +0200"}],"metadata":{"description":"Get and save an rbac token for the root user, admin rbac user","parameters":{"password":{"type":"String","description":"The password for the admin user"},"token_lifetime":{"type":"String","description":"The duration for which a token will be valid. Format <integer>[smhdy]"}},"input_method":"stdin","implementations":[{"name":"rbac_token.rb"}]}},"peadm::read_file":{"name":"peadm::read_file","files":[{"name":"read_file.sh","path":"/root/control-repo/.modules/peadm/tasks/read_file.sh","mtime":"2024-10-26 11:23:31 +0200"}],"metadata":{"description":"Read the contents of a file","parameters":{"path":{"type":"String","description":"Path to the file to read"}},"implementations":[{"name":"read_file.sh","requirements":["shell"],"input_method":"environment"}]}},"peadm::reinstall_pe":{"name":"peadm::reinstall_pe","files":[{"name":"reinstall_pe.sh","path":"/root/control-repo/.modules/peadm/tasks/reinstall_pe.sh","mtime":"2024-10-26 11:23:31 +0200"}],"metadata":{"description":"Reinstall PE, only to be used to restore PE","parameters":{"version":{"type":"String[1]","description":"The PE version to install"},"arch":{"type":"String[1]","description":"The PE installation platform","default":"el-8-x86_64"},"uninstall":{"type":"Boolean","description":"Whether we want to uninstall PE before installing","default":false}}}},"peadm::restore_classification":{"name":"peadm::restore_classification","files":[{"name":"restore_classification.rb","path":"/root/control-repo/.modules/peadm/tasks/restore_classification.rb","mtime":"2024-10-26 11:23:31 +0200"}],"metadata":{"puppet_task_version":1,"supports_noop":false,"description":"A short description of this task","parameters":{"classification_file":{"type":"String","description":"The full path to a backed up or transformed classification file","default":"/tmp/transformed_classification.json"}}}},"peadm::sign_csr":{"name":"peadm::sign_csr","files":[{"name":"sign_csr.rb","path":"/root/control-repo/.modules/peadm/tasks/sign_csr.rb","mtime":"2024-10-26 11:23:31 +0200"}],"metadata":{"description":"Submit a certificate signing request","parameters":{"certnames":{"type":"Array[String]","description":"A list of certnames to sign"}},"input_method":"stdin","implementations":[{"name":"sign_csr.rb"}]}},"peadm::ssl_clean":{"name":"peadm::ssl_clean","files":[{"name":"ssl_clean.rb","path":"/root/control-repo/.modules/peadm/tasks/ssl_clean.rb","mtime":"2024-10-26 11:23:31 +0200"}],"metadata":{"description":"Clean an agent's certificate","parameters":{"certname":{"type":"String","description":"The certname to clean"}},"input_method":"stdin"}},"peadm::submit_csr":{"name":"peadm::submit_csr","files":[{"name":"submit_csr.rb","path":"/root/control-repo/.modules/peadm/tasks/submit_csr.rb","mtime":"2024-10-26 11:23:32 +0200"},{"name":"submit_csr.ps1","path":"/root/control-repo/.modules/peadm/tasks/submit_csr.ps1","mtime":"2024-10-26 11:23:32 +0200"}],"metadata":{"description":"Submit a certificate signing request","parameters":{"dns_alt_names":{"type":"Optional[Array[String]]","description":"DNS Alternative Names to request for the certificate"}},"implementations":[{"name":"submit_csr.rb","requirements":["shell"]},{"name":"submit_csr.ps1","requirements":["powershell"]}]}},"peadm::transform_classification_groups":{"name":"peadm::transform_classification_groups","files":[{"name":"transform_classification_groups.rb","path":"/root/control-repo/.modules/peadm/tasks/transform_classification_groups.rb","mtime":"2024-10-26 11:23:32 +0200"}],"metadata":{"description":"Transform the user groups from a source backup to a list of groups on the target server","parameters":{"source_directory":{"type":"String","description":"Location of Source node group yaml file"},"working_directory":{"type":"String","description":"Location of target node group yaml file and where to create the transformed file"}},"input_method":"stdin","implementations":[{"name":"transform_classification_groups.rb"}]}},"peadm::validate_rbac_token":{"name":"peadm::validate_rbac_token","files":[{"name":"validate_rbac_token.rb","path":"/root/control-repo/.modules/peadm/tasks/validate_rbac_token.rb","mtime":"2024-10-26 11:23:32 +0200"}],"metadata":{"description":"Check an RBAC token stored in a file is valid","parameters":{"token_file":{"type":"Optional[String]","description":"The path to the token file to use"}},"input_method":"stdin","implementations":[{"name":"validate_rbac_token.rb"}]}},"peadm::wait_until_service_ready":{"name":"peadm::wait_until_service_ready","files":[{"name":"wait_until_service_ready.sh","path":"/root/control-repo/.modules/peadm/tasks/wait_until_service_ready.sh","mtime":"2024-10-26 11:23:33 +0200"}],"metadata":{"description":"Return when the orchestrator service is healthy, or timeout after 15 seconds","parameters":{"service":{"type":"Enum[all, ca, pe-master, orchestrator-service]","description":"What service to check. For example: all, pe-master, orchestrator-service"},"port":{"type":"Enum['8140', '8143']","description":"Which port to query the status API on"}},"implementations":[{"name":"wait_until_service_ready.sh","input_method":"environment"}]}},"pkcs7::secret_createkeys":{"name":"pkcs7::secret_createkeys","files":[{"name":"secret_createkeys.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.30.0/modules/pkcs7/tasks/secret_createkeys.rb","mtime":"2024-05-24 00:04:59 +0200"},{"name":"ruby_task_helper/files/task_helper.rb","path":"/root/control-repo/.modules/ruby_task_helper/files/task_helper.rb","mtime":"2024-10-26 11:25:58 +0200"}],"metadata":{"description":"Create a key pair","input_method":"stdin","parameters":{"force":{"type":"Boolean","description":"Whether to overwrite an existing key pair","default":false},"keysize":{"type":"Integer","description":"The size of the key to generate","default":2048},"private_key":{"type":"String","description":"Path to the private key","default":"keys/private_key.pkcs7.pem"},"public_key":{"type":"String","description":"Path to the public key","default":"keys/public_key.pkcs7.pem"}},"files":["ruby_task_helper/files/task_helper.rb"]}},"pkcs7::secret_decrypt":{"name":"pkcs7::secret_decrypt","files":[{"name":"secret_decrypt.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.30.0/modules/pkcs7/tasks/secret_decrypt.rb","mtime":"2024-05-24 00:04:59 +0200"},{"name":"ruby_task_helper/files/task_helper.rb","path":"/root/control-repo/.modules/ruby_task_helper/files/task_helper.rb","mtime":"2024-10-26 11:25:58 +0200"}],"metadata":{"description":"Decrypt sensitive data with pkcs7","input_method":"stdin","parameters":{"encrypted_value":{"type":"String","description":"The ciphertext to decrypt"},"private_key":{"type":"String","description":"Path to the private key","default":"keys/private_key.pkcs7.pem"},"public_key":{"type":"String","description":"Path to the public key","default":"keys/public_key.pkcs7.pem"}},"files":["ruby_task_helper/files/task_helper.rb"]}},"pkcs7::secret_encrypt":{"name":"pkcs7::secret_encrypt","files":[{"name":"secret_encrypt.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.30.0/modules/pkcs7/tasks/secret_encrypt.rb","mtime":"2024-05-24 00:04:59 +0200"},{"name":"ruby_task_helper/files/task_helper.rb","path":"/root/control-repo/.modules/ruby_task_helper/files/task_helper.rb","mtime":"2024-10-26 11:25:58 +0200"}],"metadata":{"description":"Encrypt sensitive data with pkcs7","input_method":"stdin","parameters":{"plaintext_value":{"type":"String","description":"The plaintext to encrypt"},"public_key":{"type":"String","description":"Path to the public key","default":"keys/public_key.pkcs7.pem"}},"files":["ruby_task_helper/files/task_helper.rb"]}},"puppet_agent::delete_local_filebucket":{"name":"puppet_agent::delete_local_filebucket","files":[{"name":"delete_local_filebucket.rb","path":"/root/control-repo/.modules/puppet_agent/tasks/delete_local_filebucket.rb","mtime":"2024-10-26 12:12:31 +0200"},{"name":"puppet_agent/files/rb_task_helper.rb","path":"/root/control-repo/.modules/puppet_agent/files/rb_task_helper.rb","mtime":"2024-10-26 12:12:30 +0200"}],"metadata":{"description":"Removes the local filebucket","parameters":{"force":{"description":"ignore nonexistent files and errors","type":"Optional[Boolean]"}},"files":["puppet_agent/files/rb_task_helper.rb"]}},"puppet_agent::facts_diff":{"name":"puppet_agent::facts_diff","files":[{"name":"facts_diff.rb","path":"/root/control-repo/.modules/puppet_agent/tasks/facts_diff.rb","mtime":"2024-10-26 12:12:31 +0200"},{"name":"puppet_agent/files/rb_task_helper.rb","path":"/root/control-repo/.modules/puppet_agent/files/rb_task_helper.rb","mtime":"2024-10-26 12:12:30 +0200"}],"metadata":{"description":"Run the Puppet agent facts diff action","parameters":{"exclude":{"description":"Regex used to exclude specific facts from diff","type":"Optional[String]"}},"files":["puppet_agent/files/rb_task_helper.rb"]}},"puppet_agent::install":{"name":"puppet_agent::install","files":[{"name":"install_shell.sh","path":"/root/control-repo/.modules/puppet_agent/tasks/install_shell.sh","mtime":"2024-10-26 12:12:31 +0200"},{"name":"install_powershell.ps1","path":"/root/control-repo/.modules/puppet_agent/tasks/install_powershell.ps1","mtime":"2024-10-26 12:12:31 +0200"},{"name":"facts/tasks/bash.sh","path":"/root/control-repo/.modules/facts/tasks/bash.sh","mtime":"2024-10-26 12:12:31 +0200"}],"metadata":{"description":"Install the Puppet agent package","parameters":{"version":{"description":"The version of puppet-agent to install (defaults to latest when no agent is installed)","type":"Optional[String]"},"collection":{"description":"The Puppet collection to install from (defaults to puppet, which maps to the latest collection released)","type":"Optional[Enum[puppet7, puppet8, puppet, puppet7-nightly, puppet8-nightly, puppet-nightly]]"},"absolute_source":{"description":"The absolute source location to find the Puppet agent package","type":"Optional[String]"},"yum_source":{"description":"The source location to find yum repos (defaults to yum.puppet.com)","type":"Optional[String]"},"apt_source":{"description":"The source location to find apt repos (defaults to apt.puppet.com)","type":"Optional[String]"},"mac_source":{"description":"The source location to find mac packages (defaults to downloads.puppet.com)","type":"Optional[String]"},"windows_source":{"description":"The source location to find windows packages (defaults to downloads.puppet.com)","type":"Optional[String]"},"install_options":{"description":"optional install arguments to the windows installer (defaults to REINSTALLMODE=\"amus\")","type":"Optional[String]"},"stop_service":{"description":"Whether to stop the puppet agent service after install","type":"Optional[Boolean]"},"retry":{"description":"The number of retries in case of network connectivity failures","type":"Optional[Integer]","default":5}},"implementations":[{"name":"install_shell.sh","requirements":["shell"],"files":["facts/tasks/bash.sh"],"input_method":"environment"},{"name":"install_powershell.ps1","requirements":["powershell"]}],"supports_noop":true}},"puppet_agent::version":{"name":"puppet_agent::version","files":[{"name":"version_shell.sh","path":"/root/control-repo/.modules/puppet_agent/tasks/version_shell.sh","mtime":"2024-10-26 12:12:31 +0200"},{"name":"version_powershell.ps1","path":"/root/control-repo/.modules/puppet_agent/tasks/version_powershell.ps1","mtime":"2024-10-26 12:12:31 +0200"}],"metadata":{"description":"Get the version of the Puppet agent package installed. Returns nothing if none present.","parameters":{},"implementations":[{"name":"version_shell.sh","requirements":["shell"],"input_method":"environment"},{"name":"version_powershell.ps1","requirements":["powershell"]}]}},"puppet_conf":{"name":"puppet_conf","files":[{"name":"init.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.30.0/modules/puppet_conf/tasks/init.rb","mtime":"2024-05-24 00:04:59 +0200"}],"metadata":{"description":"Inspect puppet agent configuration settings","input_method":"stdin","parameters":{"action":{"description":"The operation (get, set, delete) to perform on the configuration setting","type":"Enum[get, set, delete]"},"section":{"description":"The section of the config file. Defaults to main","type":"Optional[String[1]]"},"setting":{"description":"The name of the config entry to set/get","type":"String[1]"},"value":{"description":"The value you are setting. Only required for set","type":"Optional[String[1]]"}}}},"reboot":{"name":"reboot","files":[{"name":"init.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.30.0/modules/reboot/tasks/init.rb","mtime":"2024-05-24 00:04:59 +0200"},{"name":"nix.sh","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.30.0/modules/reboot/tasks/nix.sh","mtime":"2024-05-24 00:04:59 +0200"},{"name":"win.ps1","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.30.0/modules/reboot/tasks/win.ps1","mtime":"2024-05-24 00:04:59 +0200"}],"metadata":{"description":"Reboots a machine","supports_noop":false,"input_method":"stdin","parameters":{"timeout":{"description":"Timeout before shutdown (seconds); enforces a minimum of 3s","type":"Optional[Variant[Pattern[/^[0-9]*$/],Integer]]"},"message":{"description":"Shutdown message for systems that support it","type":"Optional[Pattern[/^[^|&]*$/]]"},"shutdown_only":{"description":"Only shut the machine down, do not reboot","type":"Optional[Boolean]"}},"implementations":[{"name":"init.rb","requirements":["puppet-agent"]},{"name":"nix.sh","requirements":["shell"],"input_method":"environment"},{"name":"win.ps1","requirements":["powershell"],"input_method":"powershell"}]}},"reboot::last_boot_time":{"name":"reboot::last_boot_time","files":[{"name":"last_boot_time_nix.sh","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.30.0/modules/reboot/tasks/last_boot_time_nix.sh","mtime":"2024-05-24 00:04:59 +0200"},{"name":"last_boot_time_win.ps1","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.30.0/modules/reboot/tasks/last_boot_time_win.ps1","mtime":"2024-05-24 00:04:59 +0200"}],"metadata":{"description":"Gets the last boot time of a Linux or Windows system","implementations":[{"name":"last_boot_time_nix.sh","requirements":["shell"]},{"name":"last_boot_time_win.ps1","requirements":["powershell"]}]}},"service":{"name":"service","files":[{"name":"init.rb","path":"/root/control-repo/.modules/service/tasks/init.rb","mtime":"2024-10-26 11:24:51 +0200"},{"name":"windows.ps1","path":"/root/control-repo/.modules/service/tasks/windows.ps1","mtime":"2024-10-26 11:24:52 +0200"},{"name":"linux.sh","path":"/root/control-repo/.modules/service/tasks/linux.sh","mtime":"2024-10-26 11:24:51 +0200"},{"name":"service/files/common.sh","path":"/root/control-repo/.modules/service/files/common.sh","mtime":"2024-10-26 11:24:51 +0200"}],"metadata":{"description":"Manage and inspect the state of services","input_method":"stdin","parameters":{"action":{"description":"The operation (start, stop, restart, enable, disable, status) to perform on the service.","type":"Enum[start, stop, restart, enable, disable, status]"},"name":{"description":"The name of the service to operate on.","type":"String[1]"},"force":{"description":"Force a Windows service to restart even if it has dependent services. This parameter is passed for Windows services only.","type":"Optional[Boolean]"},"provider":{"description":"The provider to use to manage or inspect the service, defaults to the system service manager. Only used when the 'puppet-agent' feature is available on the target so we can leverage Puppet.","type":"Optional[String[1]]"}},"implementations":[{"name":"init.rb","requirements":["puppet-agent"]},{"name":"windows.ps1","requirements":["powershell"],"input_method":"powershell"},{"name":"linux.sh","requirements":["shell"],"input_method":"environment","files":["service/files/common.sh"]}],"extensions":{"discovery":{"friendlyName":"Manage service","type":["host"]}}}},"terraform::apply":{"name":"terraform::apply","files":[{"name":"apply.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.30.0/modules/terraform/tasks/apply.rb","mtime":"2024-05-24 00:04:59 +0200"},{"name":"ruby_task_helper/files/task_helper.rb","path":"/root/control-repo/.modules/ruby_task_helper/files/task_helper.rb","mtime":"2024-10-26 11:25:58 +0200"},{"name":"terraform/lib/cli_helper.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.30.0/modules/terraform/lib/cli_helper.rb","mtime":"2024-05-24 00:04:59 +0200"}],"metadata":{"description":"Apply an HCL manifest","files":["ruby_task_helper/files/task_helper.rb","terraform/lib/cli_helper.rb"],"input_method":"stdin","parameters":{"dir":{"type":"Optional[String[1]]","description":"Path to Terraform project directory. Path is relative to CWD, unless an absolute path is specified."},"state":{"type":"Optional[String[1]]","description":"Path to read and save state. Defaults to \"terraform.tfstate\". Path is relative to \"dir\""},"target":{"type":"Optional[Variant[String[1], Array[String[1]]]]","description":"Resource to target. Operation will be limited to this resource and its dependencies. Accepts a single resource string or an array of resources"},"var":{"type":"Optional[Hash]","description":"Set Terraform variables, expects a hash with key value pairs representing variables and values."},"var_file":{"type":"Optional[Variant[String[1], Array[String[1]]]]","description":"Set variables in the Terraform configuration from a file. Path is relative to \"dir\". Accepts a single var-file path or an array of paths"},"state_out":{"type":"Optional[String[1]]","description":"Path to write state to that is different than \"state\". This can be used to preserve the old state."}}}},"terraform::destroy":{"name":"terraform::destroy","files":[{"name":"destroy.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.30.0/modules/terraform/tasks/destroy.rb","mtime":"2024-05-24 00:04:59 +0200"},{"name":"ruby_task_helper/files/task_helper.rb","path":"/root/control-repo/.modules/ruby_task_helper/files/task_helper.rb","mtime":"2024-10-26 11:25:58 +0200"},{"name":"terraform/lib/cli_helper.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.30.0/modules/terraform/lib/cli_helper.rb","mtime":"2024-05-24 00:04:59 +0200"}],"metadata":{"description":"Destroy resources managed with Terraform","files":["ruby_task_helper/files/task_helper.rb","terraform/lib/cli_helper.rb"],"input_method":"stdin","parameters":{"dir":{"type":"Optional[String[1]]","description":"Path to Terraform project directory. Path is relative to CWD, unless an absolute path is specified."},"state":{"type":"Optional[String[1]]","description":"Path to read and save state. Defaults to \"terraform.tfstate\", Path is relative to \"dir\""},"target":{"type":"Optional[Variant[String[1], Array[String[1]]]]","description":"Resource to target. Operation will be limited to this resource and its dependencies. Accepts a single resource string or an array of resources"},"var":{"type":"Optional[Hash]","description":"Set Terraform variables, expects a hash with key value pairs representing variables and values."},"var_file":{"type":"Optional[Variant[String[1], Array[String[1]]]]","description":"Set variables in the Terraform configuration from a file. Path is relative to \"dir\". Accepts a single var-file path or an array of paths"},"state_out":{"type":"Optional[String[1]]","description":"Path to write state to that is different than \"state\". This can be used to preserve the old state."}}}},"terraform::initialize":{"name":"terraform::initialize","files":[{"name":"initialize.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.30.0/modules/terraform/tasks/initialize.rb","mtime":"2024-05-24 00:04:59 +0200"},{"name":"ruby_task_helper/files/task_helper.rb","path":"/root/control-repo/.modules/ruby_task_helper/files/task_helper.rb","mtime":"2024-10-26 11:25:58 +0200"},{"name":"terraform/lib/cli_helper.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.30.0/modules/terraform/lib/cli_helper.rb","mtime":"2024-05-24 00:04:59 +0200"}],"metadata":{"description":"Initialize a Terraform project directory","files":["ruby_task_helper/files/task_helper.rb","terraform/lib/cli_helper.rb"],"input_method":"stdin","parameters":{"dir":{"type":"Optional[String[1]]","description":"Path to Terraform project directory. Path is relative to CWD, unless an absolute path is specified."}}}},"terraform::output":{"name":"terraform::output","files":[{"name":"output.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.30.0/modules/terraform/tasks/output.rb","mtime":"2024-05-24 00:04:59 +0200"},{"name":"ruby_task_helper/files/task_helper.rb","path":"/root/control-repo/.modules/ruby_task_helper/files/task_helper.rb","mtime":"2024-10-26 11:25:58 +0200"},{"name":"terraform/lib/cli_helper.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.30.0/modules/terraform/lib/cli_helper.rb","mtime":"2024-05-24 00:04:59 +0200"}],"metadata":{"description":"JSON representation of Terraform outputs","files":["ruby_task_helper/files/task_helper.rb","terraform/lib/cli_helper.rb"],"input_method":"stdin","parameters":{"dir":{"type":"Optional[String[1]]","description":"Path to Terraform project directory. Path is relative to CWD, unless an absolute path is specified."},"state":{"type":"Optional[String[1]]","description":"Path to read and save state. Defaults to \"terraform.tfstate\", Path is relative to \"dir\""}}}},"terraform::refresh":{"name":"terraform::refresh","files":[{"name":"refresh.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.30.0/modules/terraform/tasks/refresh.rb","mtime":"2024-05-24 00:04:59 +0200"},{"name":"ruby_task_helper/files/task_helper.rb","path":"/root/control-repo/.modules/ruby_task_helper/files/task_helper.rb","mtime":"2024-10-26 11:25:58 +0200"},{"name":"terraform/lib/cli_helper.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.30.0/modules/terraform/lib/cli_helper.rb","mtime":"2024-05-24 00:04:59 +0200"}],"metadata":{"description":"Refresh Terraform state file without doing an apply","files":["ruby_task_helper/files/task_helper.rb","terraform/lib/cli_helper.rb"],"input_method":"stdin","parameters":{"dir":{"type":"Optional[String[1]]","description":"Path to Terraform project directory. Path is relative to CWD, unless an absolute path is specified."},"state":{"type":"Optional[String[1]]","description":"Path to read and save state. Defaults to \"terraform.tfstate\", Path is relative to \"dir\""},"target":{"type":"Optional[Variant[String[1], Array[String[1]]]]","description":"Resource to target. Operation will be limited to this resource and its dependencies. Accepts a single resource string or an array of resources"},"var":{"type":"Optional[Hash]","description":"Set Terraform variables, expects a hash with key value pairs representing variables and values."},"var_file":{"type":"Optional[Variant[String[1], Array[String[1]]]]","description":"Set variables in the Terraform configuration from a file. Path is relative to \"dir\". Accepts a single var-file path or an array of paths"},"state_out":{"type":"Optional[String[1]]","description":"Path to write state to that is different than \"state\". This can be used to preserve the old state."}}}}}